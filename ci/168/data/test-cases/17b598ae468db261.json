{"uid":"17b598ae468db261","name":"MINIMAL-METTA-TESTS.39","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.39","time":{"start":1731436512000,"stop":1731436512134,"duration":134},"status":"failed","statusMessage":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","statusTrace":"AssertionError: Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.39\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (chain (metta (n/0/0) %Undefined% &self) $x (quote $x)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((quote (n/1/1)) (quote (n/2/0)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"8ebda6e1405cba0d","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/8ebda6e1405cba0d","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1731352372000,"stop":1731352372144,"duration":144}},{"uid":"68b9bf7fa65abd9c","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/68b9bf7fa65abd9c","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1730951940000,"stop":1730951940139,"duration":139}},{"uid":"dd460f342c47fb1b","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/dd460f342c47fb1b","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1730747459000,"stop":1730747459127,"duration":127}},{"uid":"2c2884ef099683b3","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/2c2884ef099683b3","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1730503286000,"stop":1730503286140,"duration":140}},{"uid":"fec0a13fc7bc0273","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/fec0a13fc7bc0273","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1730492996000,"stop":1730492996128,"duration":128}}]},"tags":[]},"source":"17b598ae468db261.json","parameterValues":[]}