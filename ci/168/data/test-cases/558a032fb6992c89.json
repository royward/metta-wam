{"uid":"558a032fb6992c89","name":"G1-DOCS.01","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#G1-DOCS.01","time":{"start":1731436325000,"stop":1731436325004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/g1_docs.metta.3_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.G1-DOCS.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-doc some-func))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((@doc-formal (@item some-func) (@kind function) (@type (-> Arg1Type Arg2Type ReturnType)) (@desc \"Test function\") (@params ((@param (@type Arg1Type) (@desc \"First argument\")) (@param (@type Arg2Type) (@desc \"Second argument\")))) (@return (@type ReturnType) (@desc \"Return value\"))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((@doc-formal (@item some-func) (@kind function) (@type (-> Arg1Type Arg2Type ReturnType)) (@desc \"Test function\") (@params ((@param (@type Arg1Type) (@desc \"First argument\")) (@param (@type Arg2Type) (@desc \"Second argument\")))) (@return (@type ReturnType) (@desc \"Return value\"))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"43e3a2ec1656e942","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/43e3a2ec1656e942","status":"passed","time":{"start":1731352193000,"stop":1731352193004,"duration":4}},{"uid":"41847e74b87c9507","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/41847e74b87c9507","status":"passed","time":{"start":1730951760000,"stop":1730951760004,"duration":4}},{"uid":"6052a3f5d3c6b9f2","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/6052a3f5d3c6b9f2","status":"passed","time":{"start":1730747283000,"stop":1730747283005,"duration":5}},{"uid":"4ff9322e03a0767","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/4ff9322e03a0767","status":"passed","time":{"start":1730503109000,"stop":1730503109005,"duration":5}},{"uid":"7ae84aee3679efe9","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/7ae84aee3679efe9","status":"passed","time":{"start":1730492814000,"stop":1730492814005,"duration":5}}]},"tags":[]},"source":"558a032fb6992c89.json","parameterValues":[]}