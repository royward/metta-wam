{"uid":"29fc834345334b1c","name":"LETLET.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#LETLET.01","time":{"start":1728405917000,"stop":1728405917003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/letlet.metta.0_failed.html#METTA-MORPH-TESTS.LETLET.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $T (1.0 0.9) (let* ((($f1 $c1) $T)) ($f1 $c1))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1.0 0.9))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((1.0 0.9))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":16},"items":[{"uid":"258bcb1d9f237204","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/258bcb1d9f237204","status":"passed","time":{"start":1728324536000,"stop":1728324536002,"duration":2}},{"uid":"21841b1ff400f4fc","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/21841b1ff400f4fc","status":"passed","time":{"start":1728324378000,"stop":1728324378004,"duration":4}},{"uid":"71c24f325613d4d0","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/71c24f325613d4d0","status":"passed","time":{"start":1728085907000,"stop":1728085907003,"duration":3}},{"uid":"a738413842c1f94b","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/a738413842c1f94b","status":"passed","time":{"start":1728083912000,"stop":1728083912003,"duration":3}},{"uid":"8deb26d3675fc04d","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/8deb26d3675fc04d","status":"passed","time":{"start":1728081454000,"stop":1728081454003,"duration":3}},{"uid":"b9a665be7cd0802a","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/b9a665be7cd0802a","status":"passed","time":{"start":1728077769000,"stop":1728077769002,"duration":2}},{"uid":"cfc6be0ac78bdcdd","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/cfc6be0ac78bdcdd","status":"passed","time":{"start":1727741205000,"stop":1727741205003,"duration":3}},{"uid":"1d874619b67d928a","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/1d874619b67d928a","status":"passed","time":{"start":1727725761000,"stop":1727725761003,"duration":3}},{"uid":"38e818a3387acf21","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/38e818a3387acf21","status":"passed","time":{"start":1727480748000,"stop":1727480748002,"duration":2}},{"uid":"416507118fb87e38","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/416507118fb87e38","status":"passed","time":{"start":1727480449000,"stop":1727480449003,"duration":3}},{"uid":"c991212c7478a211","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/c991212c7478a211","status":"passed","time":{"start":1727479147000,"stop":1727479147003,"duration":3}},{"uid":"3f89b27258ee54af","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/3f89b27258ee54af","status":"passed","time":{"start":1727472292000,"stop":1727472292003,"duration":3}},{"uid":"5dae75e4eb0c1cc6","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/5dae75e4eb0c1cc6","status":"passed","time":{"start":1727460687000,"stop":1727460687003,"duration":3}},{"uid":"136b4c313bf3c9c4","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/136b4c313bf3c9c4","status":"passed","time":{"start":1727460440000,"stop":1727460440003,"duration":3}},{"uid":"b1db9f3f0bb22a14","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/b1db9f3f0bb22a14","status":"passed","time":{"start":1727459920000,"stop":1727459920003,"duration":3}}]},"tags":[]},"source":"29fc834345334b1c.json","parameterValues":[]}