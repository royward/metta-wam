{"uid":"673f2a2b9c72e4a3","name":"C2-SPACES.05","historyId":"MODULE-SYSTEM:MODULE-SYSTEM#C2-SPACES.05","time":{"start":1728405141000,"stop":1728405141002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/module-system/c2_spaces.metta.0_failed.html#MODULE-SYSTEM.C2-SPACES.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (match &self (, ($obj is $prop) ($prop is-a Color) ($obj is-a Planet)) (Color of Planet $obj is $prop)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Color of Planet Mars is Red))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((Color of Planet Mars is Red))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"MODULE-SYSTEM"},{"name":"testClass","value":"MODULE-SYSTEM"},{"name":"package","value":"MODULE-SYSTEM"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":16,"unknown":0,"total":16},"items":[{"uid":"48bebe9d74abe8d5","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/48bebe9d74abe8d5","status":"passed","time":{"start":1728323779000,"stop":1728323779002,"duration":2}},{"uid":"a21203b30dadcd98","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/a21203b30dadcd98","status":"passed","time":{"start":1728323646000,"stop":1728323646002,"duration":2}},{"uid":"5fc89647a8397d33","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/5fc89647a8397d33","status":"passed","time":{"start":1728085167000,"stop":1728085167002,"duration":2}},{"uid":"483f8b1654b9df55","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/483f8b1654b9df55","status":"passed","time":{"start":1728083169000,"stop":1728083169002,"duration":2}},{"uid":"419c3b00210dd9f1","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/419c3b00210dd9f1","status":"passed","time":{"start":1728080717000,"stop":1728080717002,"duration":2}},{"uid":"328cc4a539f4022c","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/328cc4a539f4022c","status":"passed","time":{"start":1728077041000,"stop":1728077041003,"duration":3}},{"uid":"47367582c01d545","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/47367582c01d545","status":"passed","time":{"start":1727740473000,"stop":1727740473003,"duration":3}},{"uid":"a1551cb1561e96c7","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/a1551cb1561e96c7","status":"passed","time":{"start":1727725025000,"stop":1727725025003,"duration":3}},{"uid":"c5c5d4e01f2287bc","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/c5c5d4e01f2287bc","status":"passed","time":{"start":1727479996000,"stop":1727479996003,"duration":3}},{"uid":"49595d51d57820d4","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/49595d51d57820d4","status":"passed","time":{"start":1727479727000,"stop":1727479727002,"duration":2}},{"uid":"6155abff4dbb719c","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/6155abff4dbb719c","status":"passed","time":{"start":1727478410000,"stop":1727478410003,"duration":3}},{"uid":"653d7d20886e1275","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/653d7d20886e1275","status":"passed","time":{"start":1727471566000,"stop":1727471566002,"duration":2}},{"uid":"b65423757b6739e4","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/b65423757b6739e4","status":"passed","time":{"start":1727459936000,"stop":1727459936002,"duration":2}},{"uid":"a127fbdb42db59d6","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/a127fbdb42db59d6","status":"passed","time":{"start":1727459677000,"stop":1727459677004,"duration":4}},{"uid":"1f89ae7b5e315736","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/1f89ae7b5e315736","status":"passed","time":{"start":1727459210000,"stop":1727459210002,"duration":2}}]},"tags":[]},"source":"673f2a2b9c72e4a3.json","parameterValues":[]}