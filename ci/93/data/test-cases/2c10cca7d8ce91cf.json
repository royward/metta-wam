{"uid":"2c10cca7d8ce91cf","name":"MINNARS.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MINNARS.01","time":{"start":1728411995000,"stop":1728411995004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/minnars.metta.0_failed.html#METTA-MORPH-TESTS.MINNARS.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (Question ((Sentence (((ExtSet garfield) --> cat) (1.0 0.9)) (1)) (Sentence (((cat x sky) --> like) (1.0 0.9)) (2)) (Sentence ((sky --> (IntSet blue)) (1.0 0.9)) (3)) (Sentence (((((ExtSet garfield) x (IntSet blue)) --> like) ==> ((ExtSet garfield) --> artist)) (1.0 0.9)) (4))) ((ExtSet garfield) --> artist) 3))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (((1.0 0.37946790052053214) (2 1 3 4)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((1.0 0.37946790052053214) (2 1 3 4)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":17,"unknown":0,"total":17},"items":[{"uid":"aef7324fd6027d65","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/aef7324fd6027d65","status":"passed","time":{"start":1728405917000,"stop":1728405917003,"duration":3}},{"uid":"8440296b2192f775","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/8440296b2192f775","status":"passed","time":{"start":1728324536000,"stop":1728324536004,"duration":4}},{"uid":"749a2c6dd390572c","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/749a2c6dd390572c","status":"passed","time":{"start":1728324378000,"stop":1728324378004,"duration":4}},{"uid":"63a289cc8dcbf716","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/63a289cc8dcbf716","status":"passed","time":{"start":1728085907000,"stop":1728085907004,"duration":4}},{"uid":"a8534ab5994f65b1","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/a8534ab5994f65b1","status":"passed","time":{"start":1728083912000,"stop":1728083912004,"duration":4}},{"uid":"791f542b1e838f5","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/791f542b1e838f5","status":"passed","time":{"start":1728081454000,"stop":1728081454004,"duration":4}},{"uid":"eb3880a2c5bf9046","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/eb3880a2c5bf9046","status":"passed","time":{"start":1728077769000,"stop":1728077769003,"duration":3}},{"uid":"1b28af6e50fa6be6","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/1b28af6e50fa6be6","status":"passed","time":{"start":1727741205000,"stop":1727741205002,"duration":2}},{"uid":"d3332f45e1e822b6","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/d3332f45e1e822b6","status":"passed","time":{"start":1727725761000,"stop":1727725761004,"duration":4}},{"uid":"f4f8f9ff66494cf8","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/f4f8f9ff66494cf8","status":"passed","time":{"start":1727480748000,"stop":1727480748003,"duration":3}},{"uid":"8a1fd95cd62d50d3","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/8a1fd95cd62d50d3","status":"passed","time":{"start":1727480449000,"stop":1727480449003,"duration":3}},{"uid":"7648bf5e8a73ad69","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/7648bf5e8a73ad69","status":"passed","time":{"start":1727479147000,"stop":1727479147004,"duration":4}},{"uid":"3c3be5d52cece57a","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/3c3be5d52cece57a","status":"passed","time":{"start":1727472292000,"stop":1727472292004,"duration":4}},{"uid":"f9115bcc0c315214","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/f9115bcc0c315214","status":"passed","time":{"start":1727460687000,"stop":1727460687003,"duration":3}},{"uid":"cbc9a4171c3a5f2b","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/cbc9a4171c3a5f2b","status":"passed","time":{"start":1727460440000,"stop":1727460440004,"duration":4}},{"uid":"3f090c7417f8276d","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/3f090c7417f8276d","status":"passed","time":{"start":1727459920000,"stop":1727459920003,"duration":3}}]},"tags":[]},"source":"2c10cca7d8ce91cf.json","parameterValues":[]}