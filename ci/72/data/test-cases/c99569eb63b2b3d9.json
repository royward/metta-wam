{"uid":"c99569eb63b2b3d9","name":"D4-TYPE-PROP.04","historyId":"QUICK:QUICK#D4-TYPE-PROP.04","time":{"start":1727480946000,"stop":1727480946003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.04\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (\"sameTypes\" (get-type SocratesIsMortal) (get-type (HumansAreMortal SocratesIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((\"sameTypes\" (Mortal Socrates) (Mortal Socrates)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"4919e955c79f64e5","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/4919e955c79f64e5","status":"passed","time":{"start":1727480643000,"stop":1727480643002,"duration":2}},{"uid":"57445a93423dfdc4","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/57445a93423dfdc4","status":"passed","time":{"start":1727479346000,"stop":1727479346003,"duration":3}},{"uid":"8136db980e472a76","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/8136db980e472a76","status":"passed","time":{"start":1727472491000,"stop":1727472491002,"duration":2}},{"uid":"8db6c1aae4114d30","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/8db6c1aae4114d30","status":"passed","time":{"start":1727460891000,"stop":1727460891003,"duration":3}},{"uid":"61d7794ce78b8fb8","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/61d7794ce78b8fb8","status":"passed","time":{"start":1727460652000,"stop":1727460652003,"duration":3}},{"uid":"822626e8d50ae0ac","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/822626e8d50ae0ac","status":"passed","time":{"start":1727460113000,"stop":1727460113002,"duration":2}}]},"tags":[]},"source":"c99569eb63b2b3d9.json","parameterValues":[]}