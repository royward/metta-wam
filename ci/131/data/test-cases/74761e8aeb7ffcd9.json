{"uid":"74761e8aeb7ffcd9","name":"MINIMAL-METTA-TESTS.33","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.33","time":{"start":1729707161000,"stop":1729707161113,"duration":113},"status":"failed","statusMessage":"Test failed: Expected '((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))' but got '((metta 1 $_239030 &self))'","statusTrace":"AssertionError: Test failed: Expected '((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))' but got '((metta 1 $_239030 &self))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.33\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (collapse-bind (metta (foobar) $type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((metta 1 $_239030 &self))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"6b66923e6ae2567d","reportUrl":"https://royward.github.io/metta-wam/ci/129//#testresult/6b66923e6ae2567d","status":"failed","statusDetails":"Test failed: Expected '((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))' but got '((metta 1 $_239030 &self))'","time":{"start":1729639067000,"stop":1729639067124,"duration":124}},{"uid":"ae87c89e093740f4","reportUrl":"https://royward.github.io/metta-wam/ci/127//#testresult/ae87c89e093740f4","status":"failed","statusDetails":"Test failed: Expected '((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))' but got '((metta 1 $_239030 &self))'","time":{"start":1729551777000,"stop":1729551777117,"duration":117}},{"uid":"366fb993efac34e1","reportUrl":"https://royward.github.io/metta-wam/ci/126//#testresult/366fb993efac34e1","status":"failed","statusDetails":"Test failed: Expected '((1 {($_221296 <- Number) }) (\"a\" {($_221296 <- String) }))' but got '((metta 1 $_239030 &self))'","time":{"start":1729537033000,"stop":1729537033124,"duration":124}},{"uid":"c08273b0bf54a8ba","reportUrl":"https://royward.github.io/metta-wam/ci/123//#testresult/c08273b0bf54a8ba","status":"failed","statusDetails":"Test failed: Expected '((1 {($_249264 <- Number) }) (\"a\" {($_249264 <- String) }))' but got '((metta 1 $_266578 &self))'","time":{"start":1729331071000,"stop":1729331071119,"duration":119}}]},"tags":[]},"source":"74761e8aeb7ffcd9.json","parameterValues":[]}