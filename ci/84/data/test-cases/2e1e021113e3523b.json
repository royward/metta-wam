{"uid":"2e1e021113e3523b","name":"F1-IMPORTS.14","historyId":"QUICK:QUICK#F1-IMPORTS.14","time":{"start":1728084103000,"stop":1728084103002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/f1_imports.metta.3_failed.html#QUICK.F1-IMPORTS.14\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (== (let* (($x (collapse (get-atoms &m))) ($y (car-atom $x))) (get-type $y)) (get-type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":12},"items":[{"uid":"887d8d78178c4f73","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/887d8d78178c4f73","status":"passed","time":{"start":1728081639000,"stop":1728081639002,"duration":2}},{"uid":"f1016db5162eae64","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/f1016db5162eae64","status":"passed","time":{"start":1728077959000,"stop":1728077959002,"duration":2}},{"uid":"c1f57a96f43ab2c2","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/c1f57a96f43ab2c2","status":"passed","time":{"start":1727741401000,"stop":1727741401002,"duration":2}},{"uid":"aec350f944f3150f","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/aec350f944f3150f","status":"passed","time":{"start":1727725956000,"stop":1727725956002,"duration":2}},{"uid":"82f9b94ce7f1a50a","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/82f9b94ce7f1a50a","status":"passed","time":{"start":1727480946000,"stop":1727480946002,"duration":2}},{"uid":"25b01cad7d517422","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/25b01cad7d517422","status":"passed","time":{"start":1727480643000,"stop":1727480643002,"duration":2}},{"uid":"65af9dda7be4759f","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/65af9dda7be4759f","status":"passed","time":{"start":1727479346000,"stop":1727479346002,"duration":2}},{"uid":"f6d9d7ccc572553","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/f6d9d7ccc572553","status":"passed","time":{"start":1727472491000,"stop":1727472491001,"duration":1}},{"uid":"f137e47e25d34c34","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/f137e47e25d34c34","status":"passed","time":{"start":1727460891000,"stop":1727460891001,"duration":1}},{"uid":"1847a3e7655df453","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/1847a3e7655df453","status":"passed","time":{"start":1727460652000,"stop":1727460652002,"duration":2}},{"uid":"a8accf8c27fe797b","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/a8accf8c27fe797b","status":"passed","time":{"start":1727460113000,"stop":1727460113002,"duration":2}}]},"tags":[]},"source":"2e1e021113e3523b.json","parameterValues":[]}