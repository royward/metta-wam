{"uid":"8266ec4e99a123a3","name":"D4-TYPE-PROP.05","historyId":"QUICK:QUICK#D4-TYPE-PROP.05","time":{"start":1731610241000,"stop":1731610241001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-type (= SocratesIsMortal (HumansAreMortal SocratesIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Type)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Type)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"32ff98a924fc6092","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/32ff98a924fc6092","status":"passed","time":{"start":1731438451000,"stop":1731438451002,"duration":2}},{"uid":"999864e3e513fcfa","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/999864e3e513fcfa","status":"passed","time":{"start":1731354256000,"stop":1731354256002,"duration":2}},{"uid":"159fa4eefa4abc94","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/159fa4eefa4abc94","status":"passed","time":{"start":1730952693000,"stop":1730952693001,"duration":1}},{"uid":"edb4a4a6264ead2b","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/edb4a4a6264ead2b","status":"passed","time":{"start":1730748151000,"stop":1730748151001,"duration":1}},{"uid":"6ee345e7981f2f5e","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/6ee345e7981f2f5e","status":"passed","time":{"start":1730503971000,"stop":1730503971001,"duration":1}},{"uid":"52aaf7c49f61e5e8","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/52aaf7c49f61e5e8","status":"passed","time":{"start":1730493701000,"stop":1730493701001,"duration":1}}]},"tags":[]},"source":"8266ec4e99a123a3.json","parameterValues":[]}