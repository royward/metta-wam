{"uid":"53e99d37e8b285ae","name":"D4-TYPE-PROP.02","historyId":"QUICK:QUICK#D4-TYPE-PROP.02","time":{"start":1731610241000,"stop":1731610241001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-type (HumansAreMortal SocratesIsHuman)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Mortal Socrates))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((Mortal Socrates))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"9550fe65fcec5cec","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/9550fe65fcec5cec","status":"passed","time":{"start":1731438451000,"stop":1731438451001,"duration":1}},{"uid":"5e3fa0b9e40371a2","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/5e3fa0b9e40371a2","status":"passed","time":{"start":1731354256000,"stop":1731354256002,"duration":2}},{"uid":"b855fba15e5b3877","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/b855fba15e5b3877","status":"passed","time":{"start":1730952693000,"stop":1730952693002,"duration":2}},{"uid":"8d3146dcb170af48","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/8d3146dcb170af48","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"b21b804d2a5118ba","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/b21b804d2a5118ba","status":"passed","time":{"start":1730503971000,"stop":1730503971002,"duration":2}},{"uid":"2f4e18824200a4b0","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/2f4e18824200a4b0","status":"passed","time":{"start":1730493701000,"stop":1730493701002,"duration":2}}]},"tags":[]},"source":"53e99d37e8b285ae.json","parameterValues":[]}