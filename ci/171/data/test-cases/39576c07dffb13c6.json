{"uid":"39576c07dffb13c6","name":"MINIMAL-METTA-TESTS.16","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.16","time":{"start":1731608327000,"stop":1731608327089,"duration":89},"status":"failed","statusMessage":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","statusTrace":"AssertionError: Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.16\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (chain (eval (chain-to-empty-expression)) $x (quote $x)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((quote (returns-empty-expression)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((quote ()) (quote 1))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":7,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":7},"items":[{"uid":"ca476f63283e872e","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/ca476f63283e872e","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1731436512000,"stop":1731436512093,"duration":93}},{"uid":"9abad03c5875fe8c","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/9abad03c5875fe8c","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1731352372000,"stop":1731352372100,"duration":100}},{"uid":"54f92df077935118","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/54f92df077935118","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1730951940000,"stop":1730951940090,"duration":90}},{"uid":"ac91ac0c2ff01050","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/ac91ac0c2ff01050","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1730747459000,"stop":1730747459103,"duration":103}},{"uid":"9003092330f218df","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/9003092330f218df","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1730503286000,"stop":1730503286090,"duration":90}},{"uid":"fe0d8688128d24ee","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/fe0d8688128d24ee","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1730492996000,"stop":1730492996089,"duration":89}}]},"tags":[]},"source":"39576c07dffb13c6.json","parameterValues":[]}