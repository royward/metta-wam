{"uid":"67319676f0623c6f","name":"D1-GADT.14","historyId":"QUICK:QUICK#D1-GADT.14","time":{"start":1731610241000,"stop":1731610241001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d1_gadt.metta.0_failed.html#QUICK.D1-GADT.14\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (let (List $t) (get-type (Cons 5 (Cons 6 Nil))) $t))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":7,"unknown":0,"total":7},"items":[{"uid":"ada02fd1d07a15db","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/ada02fd1d07a15db","status":"passed","time":{"start":1731438451000,"stop":1731438451001,"duration":1}},{"uid":"f56dba8acaa92c8","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/f56dba8acaa92c8","status":"passed","time":{"start":1731354256000,"stop":1731354256002,"duration":2}},{"uid":"632f5a0b7be05e8f","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/632f5a0b7be05e8f","status":"passed","time":{"start":1730952693000,"stop":1730952693001,"duration":1}},{"uid":"d818f41e16858f32","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/d818f41e16858f32","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"d025c10543e6123","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/d025c10543e6123","status":"passed","time":{"start":1730503971000,"stop":1730503971001,"duration":1}},{"uid":"fc095540c802c24","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/fc095540c802c24","status":"passed","time":{"start":1730493701000,"stop":1730493701002,"duration":2}}]},"tags":[]},"source":"67319676f0623c6f.json","parameterValues":[]}