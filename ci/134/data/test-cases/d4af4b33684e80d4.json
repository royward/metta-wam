{"uid":"d4af4b33684e80d4","name":"MINIMAL-METTA-TESTS.37","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.37","time":{"start":1729795884000,"stop":1729795884112,"duration":112},"status":"failed","statusMessage":"Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","statusTrace":"AssertionError: Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.37\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (chain (n/0/0) $x (quote $x)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((quote (n/0/0)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((quote (n/2/0)) (quote (n/1/1)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"3beed61e5459f39e","reportUrl":"https://royward.github.io/metta-wam/ci/131//#testresult/3beed61e5459f39e","status":"failed","statusDetails":"Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","time":{"start":1729707161000,"stop":1729707161104,"duration":104}},{"uid":"4052b347135ab855","reportUrl":"https://royward.github.io/metta-wam/ci/129//#testresult/4052b347135ab855","status":"failed","statusDetails":"Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","time":{"start":1729639067000,"stop":1729639067137,"duration":137}},{"uid":"68781a86ef412940","reportUrl":"https://royward.github.io/metta-wam/ci/127//#testresult/68781a86ef412940","status":"failed","statusDetails":"Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","time":{"start":1729551777000,"stop":1729551777104,"duration":104}},{"uid":"a1a3af07e9026305","reportUrl":"https://royward.github.io/metta-wam/ci/126//#testresult/a1a3af07e9026305","status":"failed","statusDetails":"Test failed: Expected '((quote (n/0/0)))' but got '((quote (n/2/0)) (quote (n/1/1)))'","time":{"start":1729537033000,"stop":1729537033117,"duration":117}}]},"tags":[]},"source":"d4af4b33684e80d4.json","parameterValues":[]}