{"uid":"667c43393f364bf0","name":"F1-IMPORTS.02","historyId":"QUICK:QUICK#F1-IMPORTS.02","time":{"start":1732136032000,"stop":1732136032004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/f1_imports.metta.3_failed.html#QUICK.F1-IMPORTS.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual ((let $x (get-atoms &self) (get-type $x))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((hyperon::space::DynSpace))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((hyperon::space::DynSpace) (hyperon::space::DynSpace))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"4492156f2c831b47","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/4492156f2c831b47","status":"passed","time":{"start":1731610241000,"stop":1731610241004,"duration":4}},{"uid":"9914414d6688d3ea","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/9914414d6688d3ea","status":"passed","time":{"start":1731438451000,"stop":1731438451005,"duration":5}},{"uid":"98ec8529de7034b9","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/98ec8529de7034b9","status":"passed","time":{"start":1731354256000,"stop":1731354256006,"duration":6}},{"uid":"8a4f557f7a100993","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/8a4f557f7a100993","status":"passed","time":{"start":1730952693000,"stop":1730952693006,"duration":6}},{"uid":"b289dca33835918d","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/b289dca33835918d","status":"passed","time":{"start":1730748151000,"stop":1730748151004,"duration":4}},{"uid":"1693629ed86d6c4b","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/1693629ed86d6c4b","status":"passed","time":{"start":1730503971000,"stop":1730503971004,"duration":4}},{"uid":"88c7ba8b2390f906","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/88c7ba8b2390f906","status":"passed","time":{"start":1730493701000,"stop":1730493701003,"duration":3}}]},"tags":[]},"source":"667c43393f364bf0.json","parameterValues":[]}