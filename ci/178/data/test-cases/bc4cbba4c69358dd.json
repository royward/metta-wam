{"uid":"bc4cbba4c69358dd","name":"D4-TYPE-PROP.07","historyId":"QUICK:QUICK#D4-TYPE-PROP.07","time":{"start":1732136032000,"stop":1732136032001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.07\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsMortal (HumansAreMortal PlatoIsHuman))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"4c1d6f43d7827ddb","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/4c1d6f43d7827ddb","status":"passed","time":{"start":1731610241000,"stop":1731610241001,"duration":1}},{"uid":"a7de51f0310d3050","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/a7de51f0310d3050","status":"passed","time":{"start":1731438451000,"stop":1731438451001,"duration":1}},{"uid":"7fd6519e6bbf593f","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/7fd6519e6bbf593f","status":"passed","time":{"start":1731354256000,"stop":1731354256001,"duration":1}},{"uid":"b210cdf099c6ff8f","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/b210cdf099c6ff8f","status":"passed","time":{"start":1730952693000,"stop":1730952693002,"duration":2}},{"uid":"1497391a15f6fa92","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/1497391a15f6fa92","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"e432420fdf8db6c2","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/e432420fdf8db6c2","status":"passed","time":{"start":1730503971000,"stop":1730503971001,"duration":1}},{"uid":"f46755f958cd3c93","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/f46755f958cd3c93","status":"passed","time":{"start":1730493701000,"stop":1730493701002,"duration":2}}]},"tags":[]},"source":"bc4cbba4c69358dd.json","parameterValues":[]}