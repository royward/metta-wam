{"uid":"42cdc46e7774d900","name":"C2-SPACES.05","historyId":"MODULE-SYSTEM:MODULE-SYSTEM#C2-SPACES.05","time":{"start":1732133278000,"stop":1732133278002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/module-system/c2_spaces.metta.0_failed.html#MODULE-SYSTEM.C2-SPACES.05\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (match &self (, ($obj is $prop) ($prop is-a Color) ($obj is-a Planet)) (Color of Planet $obj is $prop)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Color of Planet Mars is Red))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((Color of Planet Mars is Red))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"MODULE-SYSTEM"},{"name":"testClass","value":"MODULE-SYSTEM"},{"name":"package","value":"MODULE-SYSTEM"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"aff26bd1a7299ebf","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/aff26bd1a7299ebf","status":"passed","time":{"start":1731607827000,"stop":1731607827002,"duration":2}},{"uid":"b8c304356faf10d6","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/b8c304356faf10d6","status":"passed","time":{"start":1731436003000,"stop":1731436003003,"duration":3}},{"uid":"8c82dc5e8d1e339d","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/8c82dc5e8d1e339d","status":"passed","time":{"start":1731351876000,"stop":1731351876002,"duration":2}},{"uid":"cef88cc0581d8cc7","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/cef88cc0581d8cc7","status":"passed","time":{"start":1730951448000,"stop":1730951448003,"duration":3}},{"uid":"e8da9f0cf0db3239","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/e8da9f0cf0db3239","status":"passed","time":{"start":1730746966000,"stop":1730746966003,"duration":3}},{"uid":"66ffef5776c0b894","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/66ffef5776c0b894","status":"passed","time":{"start":1730502794000,"stop":1730502794002,"duration":2}},{"uid":"9d3cd0bbb76f0e50","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/9d3cd0bbb76f0e50","status":"passed","time":{"start":1730492496000,"stop":1730492496002,"duration":2}}]},"tags":[]},"source":"42cdc46e7774d900.json","parameterValues":[]}