{"uid":"67e9333e77ee6088","name":"F1-IMPORTS.06","historyId":"QUICK:QUICK#F1-IMPORTS.06","time":{"start":1732136032000,"stop":1732136032002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/f1_imports.metta.3_failed.html#QUICK.F1-IMPORTS.06\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (match &m (= (f 2) $x) $x))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((g 3))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((g 3))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"5bd3ac55174a0866","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/5bd3ac55174a0866","status":"passed","time":{"start":1731610241000,"stop":1731610241002,"duration":2}},{"uid":"7a3dc7ee8c87174b","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/7a3dc7ee8c87174b","status":"passed","time":{"start":1731438451000,"stop":1731438451002,"duration":2}},{"uid":"b4d81940d54531fc","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/b4d81940d54531fc","status":"passed","time":{"start":1731354256000,"stop":1731354256002,"duration":2}},{"uid":"6784ebacf28c5de2","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/6784ebacf28c5de2","status":"passed","time":{"start":1730952693000,"stop":1730952693002,"duration":2}},{"uid":"68adcb0013cf1cd0","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/68adcb0013cf1cd0","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"c99403a89b503138","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/c99403a89b503138","status":"passed","time":{"start":1730503971000,"stop":1730503971002,"duration":2}},{"uid":"5b46a89010120c06","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/5b46a89010120c06","status":"passed","time":{"start":1730493701000,"stop":1730493701003,"duration":3}}]},"tags":[]},"source":"67e9333e77ee6088.json","parameterValues":[]}