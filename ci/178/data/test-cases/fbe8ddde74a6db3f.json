{"uid":"fbe8ddde74a6db3f","name":"D4-TYPE-PROP.08","historyId":"QUICK:QUICK#D4-TYPE-PROP.08","time":{"start":1732136032000,"stop":1732136032001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsHuman PlatoIsHuman)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"2455bea897b4bfe5","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/2455bea897b4bfe5","status":"passed","time":{"start":1731610241000,"stop":1731610241001,"duration":1}},{"uid":"59add09505ce4e1a","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/59add09505ce4e1a","status":"passed","time":{"start":1731438451000,"stop":1731438451001,"duration":1}},{"uid":"ded73bf5c3a577cc","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/ded73bf5c3a577cc","status":"passed","time":{"start":1731354256000,"stop":1731354256001,"duration":1}},{"uid":"e223fea578ca6233","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/e223fea578ca6233","status":"passed","time":{"start":1730952693000,"stop":1730952693001,"duration":1}},{"uid":"d45803335b67dd5","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/d45803335b67dd5","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"fabed967b5438729","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/fabed967b5438729","status":"passed","time":{"start":1730503971000,"stop":1730503971002,"duration":2}},{"uid":"da038117da856aef","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/da038117da856aef","status":"passed","time":{"start":1730493701000,"stop":1730493701003,"duration":3}}]},"tags":[]},"source":"fbe8ddde74a6db3f.json","parameterValues":[]}