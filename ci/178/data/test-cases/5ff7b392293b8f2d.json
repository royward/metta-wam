{"uid":"5ff7b392293b8f2d","name":"MINIMAL-METTA-TESTS.33","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.33","time":{"start":1732133810000,"stop":1732133810121,"duration":121},"status":"failed","statusMessage":"Test failed: Expected '((1 {($_224308 <- Number) }) (\"a\" {($_224308 <- String) }))' but got '((metta 1 $_242036 &self))'","statusTrace":"AssertionError: Test failed: Expected '((1 {($_224308 <- Number) }) (\"a\" {($_224308 <- String) }))' but got '((metta 1 $_242036 &self))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.33\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (collapse-bind (metta (foobar) $type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1 {($_224308 <- Number) }) (\"a\" {($_224308 <- String) }))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((metta 1 $_242036 &self))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":8,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":8},"items":[{"uid":"9ceb02330263330e","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/9ceb02330263330e","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224342 <- Number) }) (\"a\" {($_224342 <- String) }))' but got '((metta 1 $_242074 &self))'","time":{"start":1731608327000,"stop":1731608327123,"duration":123}},{"uid":"9cb22736908bb49","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/9cb22736908bb49","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224342 <- Number) }) (\"a\" {($_224342 <- String) }))' but got '((metta 1 $_242074 &self))'","time":{"start":1731436512000,"stop":1731436512127,"duration":127}},{"uid":"4259692371b5955c","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/4259692371b5955c","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224342 <- Number) }) (\"a\" {($_224342 <- String) }))' but got '((metta 1 $_242074 &self))'","time":{"start":1731352372000,"stop":1731352372120,"duration":120}},{"uid":"d1b6feb2c9eea49e","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/d1b6feb2c9eea49e","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224342 <- Number) }) (\"a\" {($_224342 <- String) }))' but got '((metta 1 $_242074 &self))'","time":{"start":1730951940000,"stop":1730951940121,"duration":121}},{"uid":"64b1284c2402f621","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/64b1284c2402f621","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224342 <- Number) }) (\"a\" {($_224342 <- String) }))' but got '((metta 1 $_242074 &self))'","time":{"start":1730747459000,"stop":1730747459110,"duration":110}},{"uid":"1ad3bc4fff2a647d","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/1ad3bc4fff2a647d","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224400 <- Number) }) (\"a\" {($_224400 <- String) }))' but got '((metta 1 $_242132 &self))'","time":{"start":1730503286000,"stop":1730503286119,"duration":119}},{"uid":"63935b505f31641a","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/63935b505f31641a","status":"failed","statusDetails":"Test failed: Expected '((1 {($_224400 <- Number) }) (\"a\" {($_224400 <- String) }))' but got '((metta 1 $_242132 &self))'","time":{"start":1730492996000,"stop":1730492996109,"duration":109}}]},"tags":[]},"source":"5ff7b392293b8f2d.json","parameterValues":[]}