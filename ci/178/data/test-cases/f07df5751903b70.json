{"uid":"f07df5751903b70","name":"MATCH-FEVAL.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-FEVAL.01","time":{"start":1732135775000,"stop":1732135775004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_feval.metta.0_failed.html#METTA-MORPH-TESTS.MATCH-FEVAL.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (match &self (= (f $x) $y) $y))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((* 2 $_4180))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((* 2 $_15502))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"5605a4f1a34166e6","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/5605a4f1a34166e6","status":"passed","time":{"start":1731610022000,"stop":1731610022005,"duration":5}},{"uid":"6551ace47303e85e","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/6551ace47303e85e","status":"passed","time":{"start":1731438229000,"stop":1731438229006,"duration":6}},{"uid":"a78ebdcd3c2a0ac","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/a78ebdcd3c2a0ac","status":"passed","time":{"start":1731354038000,"stop":1731354038006,"duration":6}},{"uid":"839e4e3356cf5815","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/839e4e3356cf5815","status":"passed","time":{"start":1730952478000,"stop":1730952478004,"duration":4}},{"uid":"964848461b41b1a3","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/964848461b41b1a3","status":"passed","time":{"start":1730747933000,"stop":1730747933005,"duration":5}},{"uid":"eb94281970efb16f","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/eb94281970efb16f","status":"passed","time":{"start":1730503757000,"stop":1730503757006,"duration":6}},{"uid":"2c4c41758314f751","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/2c4c41758314f751","status":"passed","time":{"start":1730493476000,"stop":1730493476005,"duration":5}}]},"tags":[]},"source":"f07df5751903b70.json","parameterValues":[]}