{"uid":"b41137588d139876","name":"D4-TYPE-PROP.19","historyId":"QUICK:QUICK#D4-TYPE-PROP.19","time":{"start":1732136032000,"stop":1732136032002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.19\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (ift (Mortal $x) $x))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Socrates Plato)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Socrates Plato)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"7b79ee72097c3b4b","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/7b79ee72097c3b4b","status":"passed","time":{"start":1731610241000,"stop":1731610241001,"duration":1}},{"uid":"8d3bd4788d09b043","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/8d3bd4788d09b043","status":"passed","time":{"start":1731438451000,"stop":1731438451001,"duration":1}},{"uid":"6f0716d4c08031a1","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/6f0716d4c08031a1","status":"passed","time":{"start":1731354256000,"stop":1731354256002,"duration":2}},{"uid":"89080913bcfb417f","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/89080913bcfb417f","status":"passed","time":{"start":1730952693000,"stop":1730952693001,"duration":1}},{"uid":"399fbbc0a284f813","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/399fbbc0a284f813","status":"passed","time":{"start":1730748151000,"stop":1730748151002,"duration":2}},{"uid":"d3d43ba63ff280fa","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/d3d43ba63ff280fa","status":"passed","time":{"start":1730503971000,"stop":1730503971002,"duration":2}},{"uid":"5efcffafea185667","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/5efcffafea185667","status":"passed","time":{"start":1730493701000,"stop":1730493701002,"duration":2}}]},"tags":[]},"source":"b41137588d139876.json","parameterValues":[]}