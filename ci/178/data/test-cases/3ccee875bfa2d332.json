{"uid":"3ccee875bfa2d332","name":"EVAL-FOR-TESTS.04","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#EVAL-FOR-TESTS.04","time":{"start":1732133810000,"stop":1732133810119,"duration":119},"status":"failed","statusMessage":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116614) (\"a\" $_116596))'","statusTrace":"AssertionError: Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116614) (\"a\" $_116596))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/eval_for_tests.metta.8_failed.html#HYPERON-METTALOG-SANITY.EVAL-FOR-TESTS.04\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $result (eval-for $type (foo)) ($result $type)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((1 Number) (\"a\" String))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((1 $_116614) (\"a\" $_116596))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"532bfee96b13abfc","reportUrl":"https://royward.github.io/metta-wam/ci/171//#testresult/532bfee96b13abfc","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116610) (\"a\" $_116592))'","time":{"start":1731608327000,"stop":1731608327109,"duration":109}},{"uid":"e28517714a369f8b","reportUrl":"https://royward.github.io/metta-wam/ci/168//#testresult/e28517714a369f8b","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116610) (\"a\" $_116592))'","time":{"start":1731436512000,"stop":1731436512103,"duration":103}},{"uid":"bed9b70c9c313416","reportUrl":"https://royward.github.io/metta-wam/ci/166//#testresult/bed9b70c9c313416","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116610) (\"a\" $_116592))'","time":{"start":1731352372000,"stop":1731352372113,"duration":113}},{"uid":"400ba416d1fcc002","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/400ba416d1fcc002","status":"failed","statusDetails":"Test failed: Expected '((1 Number) (\"a\" String))' but got '((1 $_116610) (\"a\" $_116592))'","time":{"start":1730951940000,"stop":1730951940106,"duration":106}}]},"tags":[]},"source":"3ccee875bfa2d332.json","parameterValues":[]}