{"uid":"615c0e259811eaf5","name":"METTALOGTESTCURRIED2.02","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#METTALOGTESTCURRIED2.02","time":{"start":1727725038000,"stop":1727725038002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/anti-regression/mettalogTestCurried2.metta.0_failed.html#ANTI-REGRESSION.METTALOGTESTCURRIED2.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: apriori-rule (-> (minsup $aptrn) (-> (specializationOf $sptrn $aptrn) (supportOf $sptrn (countNat $sptrn)))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"f1dd9d0df2b42a4","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/f1dd9d0df2b42a4","status":"passed","time":{"start":1727480010000,"stop":1727480010002,"duration":2}},{"uid":"23306a419b9848e6","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/23306a419b9848e6","status":"passed","time":{"start":1727479741000,"stop":1727479741002,"duration":2}},{"uid":"53180b4b332b0c34","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/53180b4b332b0c34","status":"passed","time":{"start":1727478423000,"stop":1727478423003,"duration":3}},{"uid":"9ee39100a4c5b995","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/9ee39100a4c5b995","status":"passed","time":{"start":1727471580000,"stop":1727471580001,"duration":1}},{"uid":"b843af96344a99d2","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/b843af96344a99d2","status":"passed","time":{"start":1727459950000,"stop":1727459950002,"duration":2}},{"uid":"bdd10f06cfb2c4d6","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/bdd10f06cfb2c4d6","status":"passed","time":{"start":1727459691000,"stop":1727459691003,"duration":3}},{"uid":"aac6af8d7dfe5b9a","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/aac6af8d7dfe5b9a","status":"passed","time":{"start":1727459223000,"stop":1727459223002,"duration":2}}]},"tags":[]},"source":"615c0e259811eaf5.json","parameterValues":[]}