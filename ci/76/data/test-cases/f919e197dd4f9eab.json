{"uid":"f919e197dd4f9eab","name":"ADD-ATOM-MATCH.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#ADD-ATOM-MATCH.01","time":{"start":1727725761000,"stop":1727725761003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/add_atom_match.metta.0_failed.html#METTA-MORPH-TESTS.ADD-ATOM-MATCH.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (sequential ((add-atom &self (man mortal)) (match &self ($A mortal) (mortal $A)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (() (mortal man))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (() (mortal man))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"60c6d09fb4a46642","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/60c6d09fb4a46642","status":"passed","time":{"start":1727480748000,"stop":1727480748003,"duration":3}},{"uid":"65fb81c749831f17","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/65fb81c749831f17","status":"passed","time":{"start":1727480449000,"stop":1727480449002,"duration":2}},{"uid":"327c77b675a4f8a5","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/327c77b675a4f8a5","status":"passed","time":{"start":1727479147000,"stop":1727479147003,"duration":3}},{"uid":"ff96c87ab1df5b2b","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/ff96c87ab1df5b2b","status":"passed","time":{"start":1727472292000,"stop":1727472292003,"duration":3}},{"uid":"285cca629f431f3d","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/285cca629f431f3d","status":"passed","time":{"start":1727460687000,"stop":1727460687003,"duration":3}},{"uid":"f9066720137e14d7","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/f9066720137e14d7","status":"passed","time":{"start":1727460440000,"stop":1727460440002,"duration":2}},{"uid":"16e66a5fa0aec09a","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/16e66a5fa0aec09a","status":"passed","time":{"start":1727459920000,"stop":1727459920003,"duration":3}}]},"tags":[]},"source":"f919e197dd4f9eab.json","parameterValues":[]}