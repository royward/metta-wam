{"uid":"f7e5fe01a7246741","name":"BCHAIN.02","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#BCHAIN.02","time":{"start":1727725038000,"stop":1727725038003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/anti-regression/bchain.metta.0_failed.html#ANTI-REGRESSION.BCHAIN.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: rule1 (-> (nums $x $y) (rule1output $x $y)))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":8,"unknown":0,"total":8},"items":[{"uid":"a69779cd0d7b71e","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/a69779cd0d7b71e","status":"passed","time":{"start":1727480010000,"stop":1727480010002,"duration":2}},{"uid":"b211d909543cc2c1","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/b211d909543cc2c1","status":"passed","time":{"start":1727479741000,"stop":1727479741002,"duration":2}},{"uid":"260d61d4dd1f79d1","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/260d61d4dd1f79d1","status":"passed","time":{"start":1727478423000,"stop":1727478423002,"duration":2}},{"uid":"ad7dcbfc6eebd452","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/ad7dcbfc6eebd452","status":"passed","time":{"start":1727471580000,"stop":1727471580002,"duration":2}},{"uid":"f0c27b52333d8a1b","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/f0c27b52333d8a1b","status":"passed","time":{"start":1727459950000,"stop":1727459950002,"duration":2}},{"uid":"c01d99c1a918b317","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/c01d99c1a918b317","status":"passed","time":{"start":1727459691000,"stop":1727459691002,"duration":2}},{"uid":"1632809deba13584","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/1632809deba13584","status":"passed","time":{"start":1727459223000,"stop":1727459223002,"duration":2}}]},"tags":[]},"source":"f7e5fe01a7246741.json","parameterValues":[]}