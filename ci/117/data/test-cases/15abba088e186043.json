{"uid":"15abba088e186043","name":"D5-AUTO-TYPES.02","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D5-AUTO-TYPES.02","time":{"start":1729224509000,"stop":1729224509047,"duration":47},"status":"failed","statusMessage":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","statusTrace":"AssertionError: Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d5_auto_types.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D5-AUTO-TYPES.02\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (== 5 \"S\"))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Error \"S\" BadType))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"30d1d68e4e140ac4","reportUrl":"https://royward.github.io/metta-wam/ci/116//#testresult/30d1d68e4e140ac4","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1729224337000,"stop":1729224337064,"duration":64}},{"uid":"97fbc79373f6001f","reportUrl":"https://royward.github.io/metta-wam/ci/112//#testresult/97fbc79373f6001f","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1729003947000,"stop":1729003947057,"duration":57}},{"uid":"1d1e91ffdda309fc","reportUrl":"https://royward.github.io/metta-wam/ci/111//#testresult/1d1e91ffdda309fc","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1729003650000,"stop":1729003650054,"duration":54}},{"uid":"4c9136e30e817129","reportUrl":"https://royward.github.io/metta-wam/ci/110//#testresult/4c9136e30e817129","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728956051000,"stop":1728956051065,"duration":65}},{"uid":"36769a939295e38a","reportUrl":"https://royward.github.io/metta-wam/ci/105//#testresult/36769a939295e38a","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728688133000,"stop":1728688133055,"duration":55}},{"uid":"5d6c9930067bb29f","reportUrl":"https://royward.github.io/metta-wam/ci/104//#testresult/5d6c9930067bb29f","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728612188000,"stop":1728612188053,"duration":53}},{"uid":"be4e0ec07d0cf337","reportUrl":"https://royward.github.io/metta-wam/ci/103//#testresult/be4e0ec07d0cf337","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728612105000,"stop":1728612105060,"duration":60}},{"uid":"722c4099ac0483b","reportUrl":"https://royward.github.io/metta-wam/ci/101//#testresult/722c4099ac0483b","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728586423000,"stop":1728586423057,"duration":57}},{"uid":"7a5ca5f40f4eac67","reportUrl":"https://royward.github.io/metta-wam/ci/99//#testresult/7a5ca5f40f4eac67","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728511808000,"stop":1728511808042,"duration":42}},{"uid":"a99405c9e2b3bcba","reportUrl":"https://royward.github.io/metta-wam/ci/98//#testresult/a99405c9e2b3bcba","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728511690000,"stop":1728511690064,"duration":64}},{"uid":"e810b658bf73990a","reportUrl":"https://royward.github.io/metta-wam/ci/97//#testresult/e810b658bf73990a","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728511590000,"stop":1728511590057,"duration":57}},{"uid":"f409a16d8f7d6642","reportUrl":"https://royward.github.io/metta-wam/ci/96//#testresult/f409a16d8f7d6642","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728511191000,"stop":1728511191046,"duration":46}},{"uid":"1f7e3a59b00c8040","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/1f7e3a59b00c8040","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728411499000,"stop":1728411499074,"duration":74}},{"uid":"d7d025909a48f8f8","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/d7d025909a48f8f8","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728405407000,"stop":1728405407056,"duration":56}},{"uid":"6447c666b56eeac2","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/6447c666b56eeac2","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728324040000,"stop":1728324040059,"duration":59}},{"uid":"d1850e8f44452729","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/d1850e8f44452729","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728323901000,"stop":1728323901056,"duration":56}},{"uid":"c833997bc829a164","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/c833997bc829a164","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728085425000,"stop":1728085425063,"duration":63}},{"uid":"aaf6691d786f19e3","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/aaf6691d786f19e3","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728083427000,"stop":1728083427042,"duration":42}},{"uid":"7fa02d4cfbba870e","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/7fa02d4cfbba870e","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728080969000,"stop":1728080969056,"duration":56}},{"uid":"ffccdc9aad96a6ab","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/ffccdc9aad96a6ab","status":"failed","statusDetails":"Test failed: Expected '((Error \"S\" BadType))' but got '(False)'","time":{"start":1728077301000,"stop":1728077301057,"duration":57}}]},"tags":[]},"source":"15abba088e186043.json","parameterValues":[]}