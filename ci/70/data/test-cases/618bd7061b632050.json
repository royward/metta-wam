{"uid":"618bd7061b632050","name":"D4-TYPE-PROP.08","historyId":"QUICK:QUICK#D4-TYPE-PROP.08","time":{"start":1727479346000,"stop":1727479346002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsHuman PlatoIsHuman)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"dd22de9c7d9a84d0","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/dd22de9c7d9a84d0","status":"passed","time":{"start":1727472491000,"stop":1727472491002,"duration":2}},{"uid":"1bee53aec7551eb7","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/1bee53aec7551eb7","status":"passed","time":{"start":1727460891000,"stop":1727460891002,"duration":2}},{"uid":"46b93dea5122bd49","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/46b93dea5122bd49","status":"passed","time":{"start":1727460652000,"stop":1727460652002,"duration":2}},{"uid":"5d9b65e9bb8e0ec7","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/5d9b65e9bb8e0ec7","status":"passed","time":{"start":1727460113000,"stop":1727460113002,"duration":2}}]},"tags":[]},"source":"618bd7061b632050.json","parameterValues":[]}