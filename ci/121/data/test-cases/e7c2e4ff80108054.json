{"uid":"e7c2e4ff80108054","name":"D5-AUTO-TYPES.03","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#D5-AUTO-TYPES.03","time":{"start":1729294495000,"stop":1729294495060,"duration":60},"status":"failed","statusMessage":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","statusTrace":"AssertionError: Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/d5_auto_types.metta.6_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.D5-AUTO-TYPES.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (== SocratesIsHuman SamIsMortal))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((Error SamIsMortal BadType))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":34,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":34},"items":[{"uid":"49a8ec228bf77c3f","reportUrl":"https://royward.github.io/metta-wam/ci/120//#testresult/49a8ec228bf77c3f","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729284088000,"stop":1729284088054,"duration":54}},{"uid":"821179162aae8fe7","reportUrl":"https://royward.github.io/metta-wam/ci/119//#testresult/821179162aae8fe7","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729282031000,"stop":1729282031050,"duration":50}},{"uid":"9dcf5e73d0ddd975","reportUrl":"https://royward.github.io/metta-wam/ci/118//#testresult/9dcf5e73d0ddd975","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729263545000,"stop":1729263545058,"duration":58}},{"uid":"61c0cc2444e42c48","reportUrl":"https://royward.github.io/metta-wam/ci/117//#testresult/61c0cc2444e42c48","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729224509000,"stop":1729224509052,"duration":52}},{"uid":"4d8c904c08b9a3d0","reportUrl":"https://royward.github.io/metta-wam/ci/116//#testresult/4d8c904c08b9a3d0","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729224337000,"stop":1729224337070,"duration":70}},{"uid":"6f7aa140bad31e82","reportUrl":"https://royward.github.io/metta-wam/ci/112//#testresult/6f7aa140bad31e82","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729003947000,"stop":1729003947058,"duration":58}},{"uid":"8e166cf1a4274cbc","reportUrl":"https://royward.github.io/metta-wam/ci/111//#testresult/8e166cf1a4274cbc","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1729003650000,"stop":1729003650055,"duration":55}},{"uid":"d8d323694dfc6f66","reportUrl":"https://royward.github.io/metta-wam/ci/110//#testresult/d8d323694dfc6f66","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728956051000,"stop":1728956051056,"duration":56}},{"uid":"18722dbcecec7459","reportUrl":"https://royward.github.io/metta-wam/ci/105//#testresult/18722dbcecec7459","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728688133000,"stop":1728688133063,"duration":63}},{"uid":"3f3026965a796144","reportUrl":"https://royward.github.io/metta-wam/ci/104//#testresult/3f3026965a796144","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728612188000,"stop":1728612188053,"duration":53}},{"uid":"d37947233bfc3387","reportUrl":"https://royward.github.io/metta-wam/ci/103//#testresult/d37947233bfc3387","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728612105000,"stop":1728612105053,"duration":53}},{"uid":"903a9f20601df2e7","reportUrl":"https://royward.github.io/metta-wam/ci/101//#testresult/903a9f20601df2e7","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728586423000,"stop":1728586423059,"duration":59}},{"uid":"3951439cb103af9e","reportUrl":"https://royward.github.io/metta-wam/ci/99//#testresult/3951439cb103af9e","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728511808000,"stop":1728511808056,"duration":56}},{"uid":"70f66f8819176033","reportUrl":"https://royward.github.io/metta-wam/ci/98//#testresult/70f66f8819176033","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728511690000,"stop":1728511690057,"duration":57}},{"uid":"615e94e31fda2387","reportUrl":"https://royward.github.io/metta-wam/ci/97//#testresult/615e94e31fda2387","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728511590000,"stop":1728511590069,"duration":69}},{"uid":"6f01ae84bd410b2b","reportUrl":"https://royward.github.io/metta-wam/ci/96//#testresult/6f01ae84bd410b2b","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728511191000,"stop":1728511191066,"duration":66}},{"uid":"817ced62bf376e66","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/817ced62bf376e66","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728411499000,"stop":1728411499066,"duration":66}},{"uid":"5e893bee6c0adc73","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/5e893bee6c0adc73","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728405407000,"stop":1728405407055,"duration":55}},{"uid":"ee8eea31cb64fb22","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/ee8eea31cb64fb22","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728324040000,"stop":1728324040054,"duration":54}},{"uid":"51be8b65345037ee","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/51be8b65345037ee","status":"failed","statusDetails":"Test failed: Expected '((Error SamIsMortal BadType))' but got '(False)'","time":{"start":1728323901000,"stop":1728323901051,"duration":51}}]},"tags":[]},"source":"e7c2e4ff80108054.json","parameterValues":[]}