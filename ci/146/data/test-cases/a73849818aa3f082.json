{"uid":"a73849818aa3f082","name":"MINIMAL-METTA-TESTS.16","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.16","time":{"start":1730232379000,"stop":1730232379105,"duration":105},"status":"failed","statusMessage":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","statusTrace":"AssertionError: Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.16\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (chain (eval (chain-to-empty-expression)) $x (quote $x)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((quote (returns-empty-expression)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((quote ()) (quote 1))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"85430308d20acd0b","reportUrl":"https://royward.github.io/metta-wam/ci/140//#testresult/85430308d20acd0b","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1730079677000,"stop":1730079677110,"duration":110}},{"uid":"45df20b9b2235324","reportUrl":"https://royward.github.io/metta-wam/ci/136//#testresult/45df20b9b2235324","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729886880000,"stop":1729886880109,"duration":109}},{"uid":"9321dd4637d85c47","reportUrl":"https://royward.github.io/metta-wam/ci/134//#testresult/9321dd4637d85c47","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729795884000,"stop":1729795884097,"duration":97}},{"uid":"98884fcd38ceaaf4","reportUrl":"https://royward.github.io/metta-wam/ci/131//#testresult/98884fcd38ceaaf4","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729707161000,"stop":1729707161108,"duration":108}},{"uid":"4a9cbb29666cfa7d","reportUrl":"https://royward.github.io/metta-wam/ci/129//#testresult/4a9cbb29666cfa7d","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729639067000,"stop":1729639067120,"duration":120}},{"uid":"f69eb77f911d8dcc","reportUrl":"https://royward.github.io/metta-wam/ci/127//#testresult/f69eb77f911d8dcc","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729551777000,"stop":1729551777095,"duration":95}},{"uid":"a044dd9ed6065578","reportUrl":"https://royward.github.io/metta-wam/ci/126//#testresult/a044dd9ed6065578","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729537033000,"stop":1729537033124,"duration":124}},{"uid":"cfeb9ba3988347f5","reportUrl":"https://royward.github.io/metta-wam/ci/123//#testresult/cfeb9ba3988347f5","status":"failed","statusDetails":"Test failed: Expected '((quote (returns-empty-expression)))' but got '((quote ()) (quote 1))'","time":{"start":1729331071000,"stop":1729331071109,"duration":109}}]},"tags":[]},"source":"a73849818aa3f082.json","parameterValues":[]}