{"uid":"3ccbce68ff5e8284","name":"F1-IMPORTS.12","historyId":"QUICK:QUICK#F1-IMPORTS.12","time":{"start":1731354256000,"stop":1731354256001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/f1_imports.metta.3_failed.html#QUICK.F1-IMPORTS.12\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (== (let* (($x (collapse (get-atoms &m))) ($y (car-atom $x))) (get-type $y)) (get-type &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (False)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"d5caf0e094c1ac1f","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/d5caf0e094c1ac1f","status":"passed","time":{"start":1730952693000,"stop":1730952693001,"duration":1}},{"uid":"4c2957a44130b39e","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/4c2957a44130b39e","status":"passed","time":{"start":1730748151000,"stop":1730748151001,"duration":1}},{"uid":"df7b98ac41fe1b75","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/df7b98ac41fe1b75","status":"passed","time":{"start":1730503971000,"stop":1730503971002,"duration":2}},{"uid":"d7f4061c96e6cb9c","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/d7f4061c96e6cb9c","status":"passed","time":{"start":1730493701000,"stop":1730493701002,"duration":2}}]},"tags":[]},"source":"3ccbce68ff5e8284.json","parameterValues":[]}