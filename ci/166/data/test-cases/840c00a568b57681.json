{"uid":"840c00a568b57681","name":"METTALOGTESTCURRIED2.01","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#METTALOGTESTCURRIED2.01","time":{"start":1731351893000,"stop":1731351893002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/anti-regression/mettalogTestCurried2.metta.0_failed.html#ANTI-REGRESSION.METTALOGTESTCURRIED2.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $sptrn (: SP (specializationOf (Inheritance B (VarIdx (S Z))) (Inheritance (VarIdx Z) (VarIdx (S Z))))) (add-atom &kb $sptrn)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":5,"unknown":0,"total":5},"items":[{"uid":"4a9b8acd80134311","reportUrl":"https://royward.github.io/metta-wam/ci/161//#testresult/4a9b8acd80134311","status":"passed","time":{"start":1730951464000,"stop":1730951464003,"duration":3}},{"uid":"86263788c3dd17a7","reportUrl":"https://royward.github.io/metta-wam/ci/157//#testresult/86263788c3dd17a7","status":"passed","time":{"start":1730746981000,"stop":1730746981003,"duration":3}},{"uid":"3b81b493c3d148c1","reportUrl":"https://royward.github.io/metta-wam/ci/153//#testresult/3b81b493c3d148c1","status":"passed","time":{"start":1730502810000,"stop":1730502810003,"duration":3}},{"uid":"60647da978c80b8a","reportUrl":"https://royward.github.io/metta-wam/ci/152//#testresult/60647da978c80b8a","status":"passed","time":{"start":1730492513000,"stop":1730492513004,"duration":4}}]},"tags":[]},"source":"840c00a568b57681.json","parameterValues":[]}