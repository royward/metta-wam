{"uid":"19298abbdb0b1e8d","name":"D1-GADT.14","historyId":"QUICK:QUICK#D1-GADT.14","time":{"start":1728086096000,"stop":1728086096001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d1_gadt.metta.0_failed.html#QUICK.D1-GADT.14\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (let (List $t) (get-type (Cons 5 (Cons 6 Nil))) $t))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (Number)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":13},"items":[{"uid":"2de37489189014cf","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/2de37489189014cf","status":"passed","time":{"start":1728084103000,"stop":1728084103001,"duration":1}},{"uid":"15917255e4dd61c2","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/15917255e4dd61c2","status":"passed","time":{"start":1728081639000,"stop":1728081639001,"duration":1}},{"uid":"7052e1af459cf1a5","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/7052e1af459cf1a5","status":"passed","time":{"start":1728077959000,"stop":1728077959001,"duration":1}},{"uid":"c89212c9a09e2017","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/c89212c9a09e2017","status":"passed","time":{"start":1727741401000,"stop":1727741401001,"duration":1}},{"uid":"73e031bb9196809a","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/73e031bb9196809a","status":"passed","time":{"start":1727725956000,"stop":1727725956001,"duration":1}},{"uid":"b044227a749dd943","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/b044227a749dd943","status":"passed","time":{"start":1727480946000,"stop":1727480946001,"duration":1}},{"uid":"67661c1ead3017a4","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/67661c1ead3017a4","status":"passed","time":{"start":1727480643000,"stop":1727480643001,"duration":1}},{"uid":"e6e1b39b31bfc563","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/e6e1b39b31bfc563","status":"passed","time":{"start":1727479346000,"stop":1727479346003,"duration":3}},{"uid":"503f49686fb4bd3b","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/503f49686fb4bd3b","status":"passed","time":{"start":1727472491000,"stop":1727472491001,"duration":1}},{"uid":"36b1293300a7b2f3","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/36b1293300a7b2f3","status":"passed","time":{"start":1727460891000,"stop":1727460891001,"duration":1}},{"uid":"3364c697771ac181","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/3364c697771ac181","status":"passed","time":{"start":1727460652000,"stop":1727460652001,"duration":1}},{"uid":"7fb056198d6bb590","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/7fb056198d6bb590","status":"passed","time":{"start":1727460113000,"stop":1727460113001,"duration":1}}]},"tags":[]},"source":"19298abbdb0b1e8d.json","parameterValues":[]}