{"uid":"7b1ff21ab38f2d57","name":"E3-MATCH-STATES.03","historyId":"HYPERON-EXPERIMENTAL-SCRIPTS:HYPERON-EXPERIMENTAL-SCRIPTS#E3-MATCH-STATES.03","time":{"start":1729224337000,"stop":1729224337055,"duration":55},"status":"failed","statusMessage":"Test failed: Expected '(active)' but got '(inactive)'","statusTrace":"AssertionError: Test failed: Expected '(active)' but got '(inactive)'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-experimental_scripts/e3_match_states.metta.3_failed.html#HYPERON-EXPERIMENTAL-SCRIPTS.E3-MATCH-STATES.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqual (get-state (status (Goal lunch-order))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (active)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (inactive)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"testClass","value":"HYPERON-EXPERIMENTAL-SCRIPTS"},{"name":"package","value":"HYPERON-EXPERIMENTAL-SCRIPTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"35c5310addebeb34","reportUrl":"https://royward.github.io/metta-wam/ci/112//#testresult/35c5310addebeb34","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1729003947000,"stop":1729003947050,"duration":50}},{"uid":"67a5d9e4a7ae1933","reportUrl":"https://royward.github.io/metta-wam/ci/111//#testresult/67a5d9e4a7ae1933","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1729003650000,"stop":1729003650054,"duration":54}},{"uid":"bb3f3d3198a4bfc","reportUrl":"https://royward.github.io/metta-wam/ci/110//#testresult/bb3f3d3198a4bfc","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728956051000,"stop":1728956051050,"duration":50}},{"uid":"8033cb24a3afd9b2","reportUrl":"https://royward.github.io/metta-wam/ci/105//#testresult/8033cb24a3afd9b2","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728688133000,"stop":1728688133050,"duration":50}},{"uid":"3492017edb34f6bb","reportUrl":"https://royward.github.io/metta-wam/ci/104//#testresult/3492017edb34f6bb","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728612188000,"stop":1728612188050,"duration":50}},{"uid":"9f37f9199ffaf31d","reportUrl":"https://royward.github.io/metta-wam/ci/103//#testresult/9f37f9199ffaf31d","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728612105000,"stop":1728612105052,"duration":52}},{"uid":"4139d164e7cc7d70","reportUrl":"https://royward.github.io/metta-wam/ci/101//#testresult/4139d164e7cc7d70","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728586423000,"stop":1728586423036,"duration":36}},{"uid":"c09bd7e34c0596fe","reportUrl":"https://royward.github.io/metta-wam/ci/99//#testresult/c09bd7e34c0596fe","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728511808000,"stop":1728511808049,"duration":49}},{"uid":"3680616feb04236b","reportUrl":"https://royward.github.io/metta-wam/ci/98//#testresult/3680616feb04236b","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728511690000,"stop":1728511690052,"duration":52}},{"uid":"2991109b1aefc87d","reportUrl":"https://royward.github.io/metta-wam/ci/97//#testresult/2991109b1aefc87d","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728511590000,"stop":1728511590050,"duration":50}},{"uid":"c2ed2bce269cece0","reportUrl":"https://royward.github.io/metta-wam/ci/96//#testresult/c2ed2bce269cece0","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728511191000,"stop":1728511191048,"duration":48}},{"uid":"a19cd56b9b7d446","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/a19cd56b9b7d446","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728411499000,"stop":1728411499055,"duration":55}},{"uid":"a36079269e7a3e6e","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/a36079269e7a3e6e","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728405407000,"stop":1728405407039,"duration":39}},{"uid":"9130da6c855f78b0","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/9130da6c855f78b0","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728324040000,"stop":1728324040048,"duration":48}},{"uid":"5945d4a1d1fff920","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/5945d4a1d1fff920","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728323901000,"stop":1728323901036,"duration":36}},{"uid":"3c6f1bd9af5c967a","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/3c6f1bd9af5c967a","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728085425000,"stop":1728085425049,"duration":49}},{"uid":"4a2afab4a0d0657b","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/4a2afab4a0d0657b","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728083427000,"stop":1728083427035,"duration":35}},{"uid":"9e0908285334af8c","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/9e0908285334af8c","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728080969000,"stop":1728080969035,"duration":35}},{"uid":"19cf464e15ec98fa","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/19cf464e15ec98fa","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1728077301000,"stop":1728077301047,"duration":47}},{"uid":"3302dac1d709b5cc","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/3302dac1d709b5cc","status":"failed","statusDetails":"Test failed: Expected '(active)' but got '(inactive)'","time":{"start":1727740724000,"stop":1727740724050,"duration":50}}]},"tags":[]},"source":"7b1ff21ab38f2d57.json","parameterValues":[]}