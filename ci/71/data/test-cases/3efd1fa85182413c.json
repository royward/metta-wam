{"uid":"3efd1fa85182413c","name":"D4-TYPE-PROP.09","historyId":"QUICK:QUICK#D4-TYPE-PROP.09","time":{"start":1727480643000,"stop":1727480643001,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d4_type_prop.metta.0_failed.html#QUICK.D4-TYPE-PROP.09\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (get-type (= SocratesIsHuman SocratesIsMortal)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ()","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":6,"unknown":0,"total":6},"items":[{"uid":"a921c7bb5158841d","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/a921c7bb5158841d","status":"passed","time":{"start":1727479346000,"stop":1727479346002,"duration":2}},{"uid":"75d1e6ff3f0bd05b","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/75d1e6ff3f0bd05b","status":"passed","time":{"start":1727472491000,"stop":1727472491002,"duration":2}},{"uid":"6b840cda18ee723","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/6b840cda18ee723","status":"passed","time":{"start":1727460891000,"stop":1727460891001,"duration":1}},{"uid":"64df7f852036b401","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/64df7f852036b401","status":"passed","time":{"start":1727460652000,"stop":1727460652001,"duration":1}},{"uid":"66c232baf90ca5c1","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/66c232baf90ca5c1","status":"passed","time":{"start":1727460113000,"stop":1727460113002,"duration":2}}]},"tags":[]},"source":"3efd1fa85182413c.json","parameterValues":[]}