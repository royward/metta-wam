{"uid":"5f97aeb6a2de38b2","name":"MINIMAL-METTA-TESTS.39","historyId":"HYPERON-METTALOG-SANITY:HYPERON-METTALOG-SANITY#MINIMAL-METTA-TESTS.39","time":{"start":1729886880000,"stop":1729886880144,"duration":144},"status":"failed","statusMessage":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","statusTrace":"AssertionError: Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/hyperon-mettalog_sanity/minimal_metta_tests.metta.31_failed.html#HYPERON-METTALOG-SANITY.MINIMAL-METTA-TESTS.39\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (chain (metta (n/0/0) %Undefined% &self) $x (quote $x)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: ((quote (n/1/1)) (quote (n/2/0)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: ((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"HYPERON-METTALOG-SANITY"},{"name":"testClass","value":"HYPERON-METTALOG-SANITY"},{"name":"package","value":"HYPERON-METTALOG-SANITY"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":6},"items":[{"uid":"5a9706f5944d52ad","reportUrl":"https://royward.github.io/metta-wam/ci/134//#testresult/5a9706f5944d52ad","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1729795884000,"stop":1729795884147,"duration":147}},{"uid":"46ef5d8e24b8c864","reportUrl":"https://royward.github.io/metta-wam/ci/131//#testresult/46ef5d8e24b8c864","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1729707161000,"stop":1729707161140,"duration":140}},{"uid":"cf4e1322dbfd365c","reportUrl":"https://royward.github.io/metta-wam/ci/129//#testresult/cf4e1322dbfd365c","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1729639067000,"stop":1729639067170,"duration":170}},{"uid":"fd1b43bc0c410e29","reportUrl":"https://royward.github.io/metta-wam/ci/127//#testresult/fd1b43bc0c410e29","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1729551777000,"stop":1729551777132,"duration":132}},{"uid":"17c9853a2426b1ce","reportUrl":"https://royward.github.io/metta-wam/ci/126//#testresult/17c9853a2426b1ce","status":"failed","statusDetails":"Test failed: Expected '((quote (n/1/1)) (quote (n/2/0)))' but got '((quote (metta (n/2/0) %Undefined% &self)) (quote (metta (n/1/1) %Undefined% &self)))'","time":{"start":1729537033000,"stop":1729537033141,"duration":141}}]},"tags":[]},"source":"5f97aeb6a2de38b2.json","parameterValues":[]}