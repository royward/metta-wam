{"uid":"35493c2100ec5522","name":"TESTS0.07","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#TESTS0.07","time":{"start":1729887336000,"stop":1729887336639,"duration":639},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/tests0.metta.0_failed.html#METTA-MORPH-TESTS.TESTS0.07\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (I- (I- ((Garfield --> cat) (1.0 0.9)) ((cat --> animal) (1.0 0.9))) ((animal --> being) (1.0 0.9))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (((animal --> (Garfield I being)) (1.0 0.40276243093922653)) ((animal --> (Garfield & being)) (1.0 0.40276243093922653)) ((animal --> (Garfield - being)) (0.0 0.40276243093922653)) ((being <-> Garfield) (1.0 0.28712091374556914)) ((being --> Garfield) (1.0 0.28712091374556914)) ((being --> Garfield) (1.0 0.42163100057836905)) ((Garfield --> being) (1.0 0.7290000000000001)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (((Garfield --> being) (1.0 0.7290000000000001)) ((being --> Garfield) (1.0 0.42163100057836905)) ((being --> Garfield) (1.0 0.28712091374556914)) ((being <-> Garfield) (1.0 0.28712091374556914)) ((animal --> (Garfield & being)) (1.0 0.40276243093922653)) ((animal --> (Garfield I being)) (1.0 0.40276243093922653)) ((animal --> (Garfield - being)) (0.0 0.40276243093922653)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":41,"unknown":0,"total":41},"items":[{"uid":"af93522235fddeaf","reportUrl":"https://royward.github.io/metta-wam/ci/134//#testresult/af93522235fddeaf","status":"passed","time":{"start":1729796339000,"stop":1729796339732,"duration":732}},{"uid":"657f65bb8683e89e","reportUrl":"https://royward.github.io/metta-wam/ci/131//#testresult/657f65bb8683e89e","status":"passed","time":{"start":1729707591000,"stop":1729707591643,"duration":643}},{"uid":"d1563b21f25a44aa","reportUrl":"https://royward.github.io/metta-wam/ci/129//#testresult/d1563b21f25a44aa","status":"passed","time":{"start":1729639515000,"stop":1729639515675,"duration":675}},{"uid":"9b301feae440959","reportUrl":"https://royward.github.io/metta-wam/ci/127//#testresult/9b301feae440959","status":"passed","time":{"start":1729552211000,"stop":1729552211644,"duration":644}},{"uid":"cf7b920f242cbd0a","reportUrl":"https://royward.github.io/metta-wam/ci/126//#testresult/cf7b920f242cbd0a","status":"passed","time":{"start":1729537479000,"stop":1729537479646,"duration":646}},{"uid":"2b63530ec436f555","reportUrl":"https://royward.github.io/metta-wam/ci/123//#testresult/2b63530ec436f555","status":"passed","time":{"start":1729331502000,"stop":1729331502656,"duration":656}},{"uid":"c260fd82e1c6770d","reportUrl":"https://royward.github.io/metta-wam/ci/121//#testresult/c260fd82e1c6770d","status":"passed","time":{"start":1729295089000,"stop":1729295089668,"duration":668}},{"uid":"b6b98ce044f0d12f","reportUrl":"https://royward.github.io/metta-wam/ci/120//#testresult/b6b98ce044f0d12f","status":"passed","time":{"start":1729284698000,"stop":1729284698642,"duration":642}},{"uid":"6bee01d83b48d984","reportUrl":"https://royward.github.io/metta-wam/ci/119//#testresult/6bee01d83b48d984","status":"passed","time":{"start":1729282605000,"stop":1729282605643,"duration":643}},{"uid":"cc5e24ed9a438cb","reportUrl":"https://royward.github.io/metta-wam/ci/118//#testresult/cc5e24ed9a438cb","status":"passed","time":{"start":1729264159000,"stop":1729264159655,"duration":655}},{"uid":"d6b2b7ef19eabbd1","reportUrl":"https://royward.github.io/metta-wam/ci/117//#testresult/d6b2b7ef19eabbd1","status":"passed","time":{"start":1729225088000,"stop":1729225088656,"duration":656}},{"uid":"3d17def8af38a12f","reportUrl":"https://royward.github.io/metta-wam/ci/116//#testresult/3d17def8af38a12f","status":"passed","time":{"start":1729224921000,"stop":1729224921632,"duration":632}},{"uid":"191dfa1536a5ddee","reportUrl":"https://royward.github.io/metta-wam/ci/112//#testresult/191dfa1536a5ddee","status":"passed","time":{"start":1729004543000,"stop":1729004543649,"duration":649}},{"uid":"3baca453d12bcfc5","reportUrl":"https://royward.github.io/metta-wam/ci/111//#testresult/3baca453d12bcfc5","status":"passed","time":{"start":1729004210000,"stop":1729004210655,"duration":655}},{"uid":"74b3c60658343fcb","reportUrl":"https://royward.github.io/metta-wam/ci/110//#testresult/74b3c60658343fcb","status":"passed","time":{"start":1728956640000,"stop":1728956640651,"duration":651}},{"uid":"a61bc7378c55f2d0","reportUrl":"https://royward.github.io/metta-wam/ci/105//#testresult/a61bc7378c55f2d0","status":"passed","time":{"start":1728688721000,"stop":1728688721603,"duration":603}},{"uid":"1148d90ebd26d679","reportUrl":"https://royward.github.io/metta-wam/ci/104//#testresult/1148d90ebd26d679","status":"passed","time":{"start":1728612770000,"stop":1728612770645,"duration":645}},{"uid":"49b2f6575e644b23","reportUrl":"https://royward.github.io/metta-wam/ci/103//#testresult/49b2f6575e644b23","status":"passed","time":{"start":1728612658000,"stop":1728612658624,"duration":624}},{"uid":"6581b23ae5e9e302","reportUrl":"https://royward.github.io/metta-wam/ci/101//#testresult/6581b23ae5e9e302","status":"passed","time":{"start":1728586979000,"stop":1728586979603,"duration":603}},{"uid":"383c9f4a623b1255","reportUrl":"https://royward.github.io/metta-wam/ci/99//#testresult/383c9f4a623b1255","status":"passed","time":{"start":1728512368000,"stop":1728512368609,"duration":609}}]},"tags":[]},"source":"35493c2100ec5522.json","parameterValues":[]}