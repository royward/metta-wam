{"uid":"af72bd8c6c0932f4","name":"D1-GADT.13","historyId":"QUICK:QUICK#D1-GADT.13","time":{"start":1727741401000,"stop":1727741401014,"duration":14},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/quick/d1_gadt.metta.0_failed.html#QUICK.D1-GADT.13\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Assertion: (assertEqualToResult (get-type (Cons 5 (Cons \"6\" Nil))))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Expected: ()","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"QUICK"},{"name":"testClass","value":"QUICK"},{"name":"package","value":"QUICK"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"3278e239ec3fba1c","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/3278e239ec3fba1c","status":"passed","time":{"start":1727725956000,"stop":1727725956014,"duration":14}},{"uid":"62d7df979025d0fb","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/62d7df979025d0fb","status":"passed","time":{"start":1727480946000,"stop":1727480946011,"duration":11}},{"uid":"313258ce52ebe165","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/313258ce52ebe165","status":"passed","time":{"start":1727480643000,"stop":1727480643014,"duration":14}},{"uid":"218a9e55971980bc","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/218a9e55971980bc","status":"passed","time":{"start":1727479346000,"stop":1727479346015,"duration":15}},{"uid":"4659a2215785f5ea","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/4659a2215785f5ea","status":"passed","time":{"start":1727472491000,"stop":1727472491008,"duration":8}},{"uid":"f4b6235de4c148de","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/f4b6235de4c148de","status":"passed","time":{"start":1727460891000,"stop":1727460891014,"duration":14}},{"uid":"cbb60f1e6e6214bc","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/cbb60f1e6e6214bc","status":"passed","time":{"start":1727460652000,"stop":1727460652009,"duration":9}},{"uid":"98c9d4d00cf85fcb","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/98c9d4d00cf85fcb","status":"passed","time":{"start":1727460113000,"stop":1727460113013,"duration":13}}]},"tags":[]},"source":"af72bd8c6c0932f4.json","parameterValues":[]}