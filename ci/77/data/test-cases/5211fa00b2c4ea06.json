{"uid":"5211fa00b2c4ea06","name":"MATCH-FEVAL.01","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-FEVAL.01","time":{"start":1727741205000,"stop":1727741205004,"duration":4},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_feval.metta.0_failed.html#METTA-MORPH-TESTS.MATCH-FEVAL.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Assertion: (assertEqualToResult (match &self (= (f $x) $y) $y))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Expected: ((* 2 $_4200))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Actual: ((* 2 $_10528))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"db5cee86b53fa27a","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/db5cee86b53fa27a","status":"passed","time":{"start":1727725761000,"stop":1727725761004,"duration":4}},{"uid":"967a033f41687a65","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/967a033f41687a65","status":"passed","time":{"start":1727480748000,"stop":1727480748004,"duration":4}},{"uid":"aed9aa5427d8971","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/aed9aa5427d8971","status":"passed","time":{"start":1727480449000,"stop":1727480449004,"duration":4}},{"uid":"872ef765ed8a1ee4","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/872ef765ed8a1ee4","status":"passed","time":{"start":1727479147000,"stop":1727479147004,"duration":4}},{"uid":"c44a6e1033c90982","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/c44a6e1033c90982","status":"passed","time":{"start":1727472292000,"stop":1727472292004,"duration":4}},{"uid":"7164d87573321642","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/7164d87573321642","status":"passed","time":{"start":1727460687000,"stop":1727460687004,"duration":4}},{"uid":"22be274d2e2c2977","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/22be274d2e2c2977","status":"passed","time":{"start":1727460440000,"stop":1727460440004,"duration":4}},{"uid":"c1a6179b2b0746d5","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/c1a6179b2b0746d5","status":"passed","time":{"start":1727459920000,"stop":1727459920004,"duration":4}}]},"tags":[]},"source":"5211fa00b2c4ea06.json","parameterValues":[]}