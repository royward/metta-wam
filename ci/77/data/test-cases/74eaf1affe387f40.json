{"uid":"74eaf1affe387f40","name":"MATCH-VOID.10","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-VOID.10","time":{"start":1727741205000,"stop":1727741205002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_void.metta.0_failed.html#METTA-MORPH-TESTS.MATCH-VOID.10\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Assertion: (assertEqualToResult (case (match &goal_events $1 $1) ((goal1 yes) (%void% 42))))","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Expected: (yes)","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"Actual: (yes)","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":9,"unknown":0,"total":9},"items":[{"uid":"72697a3ed54440b9","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/72697a3ed54440b9","status":"passed","time":{"start":1727725761000,"stop":1727725761001,"duration":1}},{"uid":"96ab1904a07a1253","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/96ab1904a07a1253","status":"passed","time":{"start":1727480748000,"stop":1727480748002,"duration":2}},{"uid":"d5cb6e8a1c7076a4","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/d5cb6e8a1c7076a4","status":"passed","time":{"start":1727480449000,"stop":1727480449002,"duration":2}},{"uid":"64ea888591a676c7","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/64ea888591a676c7","status":"passed","time":{"start":1727479147000,"stop":1727479147003,"duration":3}},{"uid":"66059102ad4eb891","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/66059102ad4eb891","status":"passed","time":{"start":1727472292000,"stop":1727472292001,"duration":1}},{"uid":"12329c21bbe6250","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/12329c21bbe6250","status":"passed","time":{"start":1727460687000,"stop":1727460687002,"duration":2}},{"uid":"9936ccab8f78b9b8","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/9936ccab8f78b9b8","status":"passed","time":{"start":1727460440000,"stop":1727460440002,"duration":2}},{"uid":"f073993644876d5","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/f073993644876d5","status":"passed","time":{"start":1727459920000,"stop":1727459920002,"duration":2}}]},"tags":[]},"source":"74eaf1affe387f40.json","parameterValues":[]}