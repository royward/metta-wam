{"uid":"155f08aa22ee2f1f","name":"MATCH-VOID.08","historyId":"METTA-MORPH-TESTS:METTA-MORPH-TESTS#MATCH-VOID.08","time":{"start":1728511763000,"stop":1728511763002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/metta-morph_tests/match_void.metta.0_failed.html#METTA-MORPH-TESTS.MATCH-VOID.08\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (case (match &goal_events $1 $1) ((goal1 yes) (%void% 42))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (42)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (42)","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"METTA-MORPH-TESTS"},{"name":"testClass","value":"METTA-MORPH-TESTS"},{"name":"package","value":"METTA-MORPH-TESTS"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":18},"items":[{"uid":"4220aceb9863ef2a","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/4220aceb9863ef2a","status":"passed","time":{"start":1728411995000,"stop":1728411995001,"duration":1}},{"uid":"eaf7239cb725ba0f","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/eaf7239cb725ba0f","status":"passed","time":{"start":1728405917000,"stop":1728405917002,"duration":2}},{"uid":"e1e2110fc1f4816a","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/e1e2110fc1f4816a","status":"passed","time":{"start":1728324536000,"stop":1728324536001,"duration":1}},{"uid":"65eb284adefa8e05","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/65eb284adefa8e05","status":"passed","time":{"start":1728324378000,"stop":1728324378002,"duration":2}},{"uid":"ed116919fd584c2b","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/ed116919fd584c2b","status":"passed","time":{"start":1728085907000,"stop":1728085907002,"duration":2}},{"uid":"bc200151886a2e","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/bc200151886a2e","status":"passed","time":{"start":1728083912000,"stop":1728083912002,"duration":2}},{"uid":"b99835fa5123553e","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/b99835fa5123553e","status":"passed","time":{"start":1728081454000,"stop":1728081454001,"duration":1}},{"uid":"a48c32685aada13f","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/a48c32685aada13f","status":"passed","time":{"start":1728077769000,"stop":1728077769002,"duration":2}},{"uid":"4e1c92682ac0b545","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/4e1c92682ac0b545","status":"passed","time":{"start":1727741205000,"stop":1727741205002,"duration":2}},{"uid":"4de28f07984b3604","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/4de28f07984b3604","status":"passed","time":{"start":1727725761000,"stop":1727725761001,"duration":1}},{"uid":"d25c074e1a76c3e","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/d25c074e1a76c3e","status":"passed","time":{"start":1727480748000,"stop":1727480748002,"duration":2}},{"uid":"c5880e46048d5b40","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/c5880e46048d5b40","status":"passed","time":{"start":1727480449000,"stop":1727480449002,"duration":2}},{"uid":"e7885ead9017d90c","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/e7885ead9017d90c","status":"passed","time":{"start":1727479147000,"stop":1727479147002,"duration":2}},{"uid":"51531170626afff9","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/51531170626afff9","status":"passed","time":{"start":1727472292000,"stop":1727472292001,"duration":1}},{"uid":"c23c23a2abc1a4bd","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/c23c23a2abc1a4bd","status":"passed","time":{"start":1727460687000,"stop":1727460687002,"duration":2}},{"uid":"43407c66b241c0f7","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/43407c66b241c0f7","status":"passed","time":{"start":1727460440000,"stop":1727460440001,"duration":1}},{"uid":"6f5fcc5b68890d4","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/6f5fcc5b68890d4","status":"passed","time":{"start":1727459920000,"stop":1727459920001,"duration":1}}]},"tags":[]},"source":"155f08aa22ee2f1f.json","parameterValues":[]}