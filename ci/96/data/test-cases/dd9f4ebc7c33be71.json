{"uid":"dd9f4ebc7c33be71","name":"METTALOGTESTCURRIED2.01","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#METTALOGTESTCURRIED2.01","time":{"start":1728510937000,"stop":1728510937003,"duration":3},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/anti-regression/mettalogTestCurried2.metta.0_failed.html#ANTI-REGRESSION.METTALOGTESTCURRIED2.01\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (let $sptrn (: SP (specializationOf (Inheritance B (VarIdx (S Z))) (Inheritance (VarIdx Z) (VarIdx (S Z))))) (add-atom &kb $sptrn)))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":18},"items":[{"uid":"552d5e2dae1ea63d","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/552d5e2dae1ea63d","status":"passed","time":{"start":1728411251000,"stop":1728411251003,"duration":3}},{"uid":"eb4cffc8b5380bfe","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/eb4cffc8b5380bfe","status":"passed","time":{"start":1728405155000,"stop":1728405155003,"duration":3}},{"uid":"be90c3013d960185","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/be90c3013d960185","status":"passed","time":{"start":1728323792000,"stop":1728323792003,"duration":3}},{"uid":"f2d0817d9cea348b","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/f2d0817d9cea348b","status":"passed","time":{"start":1728323658000,"stop":1728323658003,"duration":3}},{"uid":"ce822828e8c6cb3a","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/ce822828e8c6cb3a","status":"passed","time":{"start":1728085180000,"stop":1728085180002,"duration":2}},{"uid":"fc4aba26df30c3f0","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/fc4aba26df30c3f0","status":"passed","time":{"start":1728083182000,"stop":1728083182002,"duration":2}},{"uid":"69864f5ed5e5d8a8","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/69864f5ed5e5d8a8","status":"passed","time":{"start":1728080730000,"stop":1728080730003,"duration":3}},{"uid":"23a17abe820e7bbf","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/23a17abe820e7bbf","status":"passed","time":{"start":1728077054000,"stop":1728077054003,"duration":3}},{"uid":"1a4011c9396e61a7","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/1a4011c9396e61a7","status":"passed","time":{"start":1727740486000,"stop":1727740486003,"duration":3}},{"uid":"1fe98f83fa589cbe","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/1fe98f83fa589cbe","status":"passed","time":{"start":1727725038000,"stop":1727725038003,"duration":3}},{"uid":"3562aa5eeefa00a6","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/3562aa5eeefa00a6","status":"passed","time":{"start":1727480010000,"stop":1727480010002,"duration":2}},{"uid":"9fc3784179900784","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/9fc3784179900784","status":"passed","time":{"start":1727479741000,"stop":1727479741003,"duration":3}},{"uid":"35cc15d2173e26ea","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/35cc15d2173e26ea","status":"passed","time":{"start":1727478423000,"stop":1727478423003,"duration":3}},{"uid":"4f4737b462bd24a2","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/4f4737b462bd24a2","status":"passed","time":{"start":1727471580000,"stop":1727471580002,"duration":2}},{"uid":"8eeacb83b35477d0","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/8eeacb83b35477d0","status":"passed","time":{"start":1727459950000,"stop":1727459950002,"duration":2}},{"uid":"b8e9b061d9ca7879","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/b8e9b061d9ca7879","status":"passed","time":{"start":1727459691000,"stop":1727459691002,"duration":2}},{"uid":"ef6e7e0162e3fee1","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/ef6e7e0162e3fee1","status":"passed","time":{"start":1727459223000,"stop":1727459223002,"duration":2}}]},"tags":[]},"source":"dd9f4ebc7c33be71.json","parameterValues":[]}