{"uid":"66029a11724612b4","name":"BCHAIN.03","historyId":"ANTI-REGRESSION:ANTI-REGRESSION#BCHAIN.03","time":{"start":1728511335000,"stop":1728511335002,"duration":2},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"steps":[{"name":"<![CDATA[","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"<a href=\"https://royward.github.io/metta-wam/reports/tests_output/baseline-compat/tests/baseline_compat/anti-regression/bchain.metta.0_failed.html#ANTI-REGRESSION.BCHAIN.03\">Test Report</a>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Assertion: (assertEqualToResult (add-atom &kb (: rule (-> (rule1output $x $y) (-> (⍃ $x $y) (less $x $y))))))","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Expected: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Actual: (())","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"]]>","time":{},"steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":7,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"resultFormat","value":"junit"},{"name":"suite","value":"ANTI-REGRESSION"},{"name":"testClass","value":"ANTI-REGRESSION"},{"name":"package","value":"ANTI-REGRESSION"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":0,"passed":19,"unknown":0,"total":19},"items":[{"uid":"72f8ca0e4e359300","reportUrl":"https://royward.github.io/metta-wam/ci/96//#testresult/72f8ca0e4e359300","status":"passed","time":{"start":1728510937000,"stop":1728510937002,"duration":2}},{"uid":"fd035d5041bb07b3","reportUrl":"https://royward.github.io/metta-wam/ci/93//#testresult/fd035d5041bb07b3","status":"passed","time":{"start":1728411251000,"stop":1728411251002,"duration":2}},{"uid":"411db57908105d56","reportUrl":"https://royward.github.io/metta-wam/ci/92//#testresult/411db57908105d56","status":"passed","time":{"start":1728405155000,"stop":1728405155002,"duration":2}},{"uid":"9c121389e5e1433a","reportUrl":"https://royward.github.io/metta-wam/ci/90//#testresult/9c121389e5e1433a","status":"passed","time":{"start":1728323792000,"stop":1728323792002,"duration":2}},{"uid":"b124563a8cb39aca","reportUrl":"https://royward.github.io/metta-wam/ci/89//#testresult/b124563a8cb39aca","status":"passed","time":{"start":1728323658000,"stop":1728323658003,"duration":3}},{"uid":"b43937f1a8d365b2","reportUrl":"https://royward.github.io/metta-wam/ci/85//#testresult/b43937f1a8d365b2","status":"passed","time":{"start":1728085180000,"stop":1728085180002,"duration":2}},{"uid":"3c486d279732d519","reportUrl":"https://royward.github.io/metta-wam/ci/84//#testresult/3c486d279732d519","status":"passed","time":{"start":1728083182000,"stop":1728083182002,"duration":2}},{"uid":"84a588bb5bee367a","reportUrl":"https://royward.github.io/metta-wam/ci/83//#testresult/84a588bb5bee367a","status":"passed","time":{"start":1728080730000,"stop":1728080730002,"duration":2}},{"uid":"2ee9b2fe6bce8b75","reportUrl":"https://royward.github.io/metta-wam/ci/82//#testresult/2ee9b2fe6bce8b75","status":"passed","time":{"start":1728077054000,"stop":1728077054002,"duration":2}},{"uid":"fa761f10120f810e","reportUrl":"https://royward.github.io/metta-wam/ci/77//#testresult/fa761f10120f810e","status":"passed","time":{"start":1727740486000,"stop":1727740486002,"duration":2}},{"uid":"1d11bc011426fd00","reportUrl":"https://royward.github.io/metta-wam/ci/76//#testresult/1d11bc011426fd00","status":"passed","time":{"start":1727725038000,"stop":1727725038003,"duration":3}},{"uid":"2267b730a576eb8c","reportUrl":"https://royward.github.io/metta-wam/ci/72//#testresult/2267b730a576eb8c","status":"passed","time":{"start":1727480010000,"stop":1727480010002,"duration":2}},{"uid":"329cfd3d097641bb","reportUrl":"https://royward.github.io/metta-wam/ci/71//#testresult/329cfd3d097641bb","status":"passed","time":{"start":1727479741000,"stop":1727479741001,"duration":1}},{"uid":"fba1e60fb77c6f91","reportUrl":"https://royward.github.io/metta-wam/ci/70//#testresult/fba1e60fb77c6f91","status":"passed","time":{"start":1727478423000,"stop":1727478423002,"duration":2}},{"uid":"48b3763b0511cff0","reportUrl":"https://royward.github.io/metta-wam/ci/68//#testresult/48b3763b0511cff0","status":"passed","time":{"start":1727471580000,"stop":1727471580002,"duration":2}},{"uid":"2b83e72ebff29ec8","reportUrl":"https://royward.github.io/metta-wam/ci/67//#testresult/2b83e72ebff29ec8","status":"passed","time":{"start":1727459950000,"stop":1727459950002,"duration":2}},{"uid":"9c91f73c509843a6","reportUrl":"https://royward.github.io/metta-wam/ci/66//#testresult/9c91f73c509843a6","status":"passed","time":{"start":1727459691000,"stop":1727459691002,"duration":2}},{"uid":"685857b7e7720a72","reportUrl":"https://royward.github.io/metta-wam/ci/65//#testresult/685857b7e7720a72","status":"passed","time":{"start":1727459223000,"stop":1727459223002,"duration":2}}]},"tags":[]},"source":"66029a11724612b4.json","parameterValues":[]}