; Test File: car-atom Bug in MeTTa
; Bug Report: https://github.com/trueagi-io/hyperon-experimental/issues/621

; Issue Overview:
; The `car-atom` function raises an error on some non-empty expressions. This issue is observed
; when `stringToChars` is used in conjunction with `car-atom`.

; Example 1: Using `car-atom` Directly
; ------------------------------------
; Test: `car-atom` on a manually created non-empty list
!(assertEqualToResult
   (car-atom ('a' 'b'))
   ('a'))
; Explanation:
; The input `('a' 'b')` is a valid non-empty list. The result should be the first element, `['a']`.

; Example 2: Using `stringToChars` with `car-atom`
; -----------------------------------------------
; Test: Converting a string to a list of characters and applying `car-atom`
!(assertEqualToResult
   (let $s (stringToChars "ab") (car-atom $s))
   ('a'))
; Explanation:
; The function `stringToChars` correctly converts `"ab"` into `('a' 'b')`. Applying `car-atom` to this
; list should return the first element, `['a']`.

; Expected Behavior:
; - `car-atom` should seamlessly handle non-empty expressions resulting from `stringToChars`.

; Example 3: Direct `stringToChars` Output
; ----------------------------------------
; Test: Ensure `stringToChars` outputs the expected list of characters
!(assertEqualToResult
   (stringToChars "ab")
   (('a' 'b')))
; Explanation:
; The function `stringToChars` converts `"ab"` into `('a' 'b')`.

; Example 4: Combining Manually Created and Generated Lists
; ---------------------------------------------------------
; Test: Manually creating a list and applying `car-atom`
!(assertEqualToResult
   (let $s ('a' 'b') (car-atom $s))
   ('a'))
; Explanation:
; The manually created list `('a' 'b')` works correctly with `car-atom`.

; Summary:
; - The bug occurs specifically when the list is generated by `stringToChars` and passed to `car-atom`.
; - Expected behavior is that `car-atom` treats generated lists and manually created lists identically.
